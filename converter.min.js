(function(domain,undefined){"use strict";var BASE16_ENCODE_TABLE=[48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102];var BASE16_DECODE_TABLE=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,11,12,13,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];var BASE32_ENCODE_TABLE=[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,50,51,52,53,54,55];var BASE32_DECODE_TABLE=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];var BASE32_HEX_ENCODE_TABLE=[48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86];var BASE32_HEX_DECODE_TABLE=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,-1,-1,-1,-1,-1,-1,-1,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];var BASE64_ENCODE_TABLE=[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47];var BASE64_DECODE_TABLE=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,62,-1,-1,-1,63,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,-1,-1,-1,-1,-1];var BASE64_URL_ENCODE_TABLE=[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,45,95];var BASE64_URL_DECODE_TABLE=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,62,-1,-1,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,63,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,-1,-1,-1,-1,-1];var PADCHAR=61;var TAILPAD=/=+$/;function base16(input,table){var output=new Array(input.length<<1>>>0);for(var start=0,offset=0;start<input.length;++start){output[offset++]=table[input[start]>>>4&15];output[offset++]=table[input[start]&15]}return output}function debase16(bytes,table){if(bytes.length&1){throw new Error("Wrong size of base16 final chunk.")}var output=new Array(bytes.length>>>1);for(var start=0,offset=0;start+2<=bytes.length;start+=2){var a=table[bytes.charCodeAt(start)&127];var b=table[bytes.charCodeAt(start+1)&127];if(a<0||b<0){throw new Error("Out of base16 character range. [offset="+start+"]")}output[offset++]=a<<4|b}return output}function base32(input,table){var output=new Array(Math.ceil(input.length/5)<<3>>>0);for(var start=0,offset=0;start+5<=input.length;start+=5){var a=input[start];var b=input[start+1];var c=input[start+2];var d=input[start+3];var e=input[start+4];output[offset++]=table[a>>>3&31];output[offset++]=table[(a&7)<<2|b>>>6&3];output[offset++]=table[b>>>1&31];output[offset++]=table[(b&1)<<4|c>>>4&15];output[offset++]=table[(c&15)<<1|d>>>7&1];output[offset++]=table[d>>>2&31];output[offset++]=table[(d&3)<<3|e>>>5&7];output[offset++]=table[e&31]}if(input.length-start!=0){switch(input.length-start){case 1:output[offset++]=table[input[start]>>>3&31];output[offset++]=table[(input[start]&7)<<2];break;case 2:output[offset++]=table[input[start]>>>3&31];output[offset++]=table[(input[start]&7)<<2|input[start+1]>>>6&3];output[offset++]=table[input[start+1]>>>1&31];output[offset++]=table[(input[start+1]&1)<<4];break;case 3:output[offset++]=table[input[start]>>>3&31];output[offset++]=table[(input[start]&7)<<2|input[start+1]>>>6&3];output[offset++]=table[input[start+1]>>>1&31];output[offset++]=table[(input[start+1]&1)<<4|input[start+2]>>>4&15];output[offset++]=table[(input[start+2]&15)<<1];break;case 4:output[offset++]=table[input[start]>>>3&31];output[offset++]=table[(input[start]&7)<<2|input[start+1]>>>6&3];output[offset++]=table[input[start+1]>>>1&31];output[offset++]=table[(input[start+1]&1)<<4|input[start+2]>>>4&15];output[offset++]=table[(input[start+2]&15)<<1|input[start+3]>>>7&1];output[offset++]=table[input[start+3]>>>2&31];output[offset++]=table[(input[start+3]&3)<<3];break;default:throw new Error("Wrong size of base32 final chunk.")}for(var i=offset;i<output.length;++i){output[i]=PADCHAR}}return output}function debase32(bytes,table){var output=new Array((bytes.length>>>3)*5);for(var start=0,offset=0;start+8<=bytes.length;start+=8){var a=table[bytes.charCodeAt(start)&127];var b=table[bytes.charCodeAt(start+1)&127];var c=table[bytes.charCodeAt(start+2)&127];var d=table[bytes.charCodeAt(start+3)&127];var e=table[bytes.charCodeAt(start+4)&127];var f=table[bytes.charCodeAt(start+5)&127];var g=table[bytes.charCodeAt(start+6)&127];var h=table[bytes.charCodeAt(start+7)&127];if(a<0||b<0||c<0||d<0||e<0||f<0||g<0||h<0){throw new Error("Out of base32 character range. [offset="+start+"]")}output[offset++]=a<<3|b>>>2;output[offset++]=(b&3)<<6|c<<1|d>>>4;output[offset++]=(d&15)<<4|e>>>1;output[offset++]=(e&1)<<7|f<<2|g>>>3;output[offset++]=(g&7)<<5|h}if(bytes.length-start!=0){switch(bytes.length-start){case 2:a=table[bytes.charCodeAt(start)&127];b=table[bytes.charCodeAt(start+1)&127];if(a<0||b<0){throw new Error("Out of base32 character range. [offset="+(bytes.length-start)+"]")}output[offset++]=a<<3|b>>>2;break;case 4:a=table[bytes.charCodeAt(start)&127];b=table[bytes.charCodeAt(start+1)&127];c=table[bytes.charCodeAt(start+2)&127];d=table[bytes.charCodeAt(start+3)&127];if(a<0||b<0||c<0||d<0){throw new Error("Out of base32 character range. [offset="+(bytes.length-start)+"]")}output[offset++]=a<<3|b>>>2;output[offset++]=(b&3)<<6|c<<1|d>>>4;break;case 5:a=table[bytes.charCodeAt(start)&127];b=table[bytes.charCodeAt(start+1)&127];c=table[bytes.charCodeAt(start+2)&127];d=table[bytes.charCodeAt(start+3)&127];e=table[bytes.charCodeAt(start+4)&127];if(a<0||b<0||c<0||d<0||e<0){throw new Error("Out of base32 character range. [offset="+(bytes.length-start)+"]")}output[offset++]=a<<3|b>>>2;output[offset++]=(b&3)<<6|c<<1|d>>>4;output[offset++]=(d&15)<<4|e>>>1;break;case 7:a=table[bytes.charCodeAt(start)&127];b=table[bytes.charCodeAt(start+1)&127];c=table[bytes.charCodeAt(start+2)&127];d=table[bytes.charCodeAt(start+3)&127];e=table[bytes.charCodeAt(start+4)&127];f=table[bytes.charCodeAt(start+5)&127];g=table[bytes.charCodeAt(start+6)&127];if(a<0||b<0||c<0||d<0||e<0||f<0||g<0){throw new Error("Out of base32 character range. [offset="+(bytes.length-start)+"]")}output[offset++]=a<<3|b>>>2;output[offset++]=(b&3)<<6|c<<1|d>>>4;output[offset++]=(d&15)<<4|e>>>1;output[offset++]=(e&1)<<7|f<<2|g>>>3;break;default:throw new Error("Wrong size of base32 final chunk.")}}return output}function base64(input,table){var output=new Array(Math.ceil(input.length/3)<<2>>>0);for(var start=0,offset=0;start+3<=input.length;start+=3){var a=input[start];var b=input[start+1];var c=input[start+2];output[offset++]=table[a>>>2&63];output[offset++]=table[(a&3)<<4|b>>>4&15];output[offset++]=table[(b&15)<<2|c>>>6&3];output[offset++]=table[c&63]}if(input.length-start!=0){switch(input.length-start){case 1:output[offset++]=table[input[start]>>>2&63];output[offset++]=table[(input[start]&3)<<4];break;case 2:output[offset++]=table[input[start]>>>2&63];output[offset++]=table[(input[start]&3)<<4|input[start+1]>>>4&15];output[offset++]=table[(input[start+1]&15)<<2];break;default:throw new Error("Wrong size of base64 final chunk.")}for(var i=offset;i<output.length;++i){output[i]=PADCHAR}}return output}function debase64(bytes,table){var output=new Array((bytes.length>>>2)*3);for(var start=0,offset=0;start+4<=bytes.length;start+=4){var a=table[bytes.charCodeAt(start)&127];var b=table[bytes.charCodeAt(start+1)&127];var c=table[bytes.charCodeAt(start+2)&127];var d=table[bytes.charCodeAt(start+3)&127];if(a<0||b<0||c<0||d<0){throw new Error("Out of base64 character range. [offset="+start+"]")}output[offset++]=a<<2|b>>>4;output[offset++]=(b&15)<<4|c>>>2;output[offset++]=(c&3)<<6|d}if(bytes.length-start!=0){switch(bytes.length-start){case 2:a=table[bytes.charCodeAt(start)&127];b=table[bytes.charCodeAt(start+1)&127];if(a<0||b<1){throw new Error("Out of base64 character range. [offset="+(bytes.length-start)+"]")}output[offset++]=a<<2|b>>>4;break;case 3:a=table[bytes.charCodeAt(start)&127];b=table[bytes.charCodeAt(start+1)&127];c=table[bytes.charCodeAt(start+2)&127];if(a<0||b<0||c<0){throw new Error("Out of base64 character range. [offset="+(bytes.length-start)+"]")}output[offset++]=a<<2|b>>>4;output[offset++]=(b&15)<<4|c>>>2;break;default:throw new Error("Wrong size of base64 final chunk.")}}return output}function utf8(input){var size=0;var char=0;for(var start=0;start<input.length;++start){char=input.charCodeAt(start);size+=char>=55296&&char<=56319?++start>=input.length?0:4:char<=127?1:char<=2047?2:3}var output=new Array(size);for(var start=0,offset=0;start<input.length;++start){char=input.charCodeAt(start);if(char>=56320&&char<=57343){throw new Error("Encounter an unpaired surrogate. [char="+char+"]")}if(char>=55296&&char<=56319){if(++start>=input.length){throw new Error("Encounter an unpaired surrogate. [char="+char+"]")}var tail=input.charCodeAt(start);if(tail<56320||tail>57343){throw new Error("Encounter an unpaired surrogate. [char="+char+", tail="+tail+"]")}char=((char&1023)<<10|tail&1023)+65536}if(char<=127){output[offset++]=char}else if(char<=2047){output[offset++]=(char>>>6)+192;output[offset++]=(char&63)+128}else if(char<=65535){output[offset++]=(char>>>12)+224;output[offset++]=(char>>>6&63)+128;output[offset++]=(char&63)+128}else{output[offset++]=(char>>>18)+240;output[offset++]=(char>>>12&63)+128;output[offset++]=(char>>>6&63)+128;output[offset++]=(char&63)+128}}return output}function deutf8(bytes){var size=0;var char=0;for(var start=0;start<bytes.length;++start){char=bytes[start];size+=char<=127?1:(char&240)==240?(start+=3)>=bytes.length?0:2:(char&224)==224?(start+=2)>=bytes.length?0:1:(char&192)==192?(start+=1)>=bytes.length?0:1:0}var output=new Array(size);var offset=0;for(var start=0,total=0;start<bytes.length;++start){char=bytes[start];if(char>=128){if(char<194||char>244){throw new Error("Invaild utf-8 character. [offset=${start}, char="+char+"]")}if((char&240)==240){total=start+3;char=char&7}else if((char&224)==224){total=start+2;char=char&15}else if((char&192)==192){total=start+1;char=char&31}else{throw new Error("Invaild utf-8 character. [offset="+start+", char="+char+"]")}if(total>=input.length){throw new Error("Encounter an unpaired surrogate. [char="+char+"]")}while(start+1<=total){var tail=bytes[++start];if(tail<128||tail>191){throw new Error("Invaild utf-8 trialing character. [offset="+start+", char="+char+"]")}char=char<<6|tail&63}}if(char>=55296&&char<=57343){throw new Error("Encounter an unpaired surrogate. [char="+char+"]")}if(char>=65536){output[offset++]=(char>>10)+55232;output[offset++]=(char&1023)+56320}else{output[offset++]=char}}return output}function arr2str(bytes){return String.fromCharCode.apply(null,bytes)}function trimRight(bytes){return bytes.replace(TAILPAD,"")}function encode(string,codec){switch(codec.toLowerCase()){case"hex":case"base16":return arr2str(base16(utf8(string),BASE16_ENCODE_TABLE));case"base32":return arr2str(base32(utf8(string),BASE32_ENCODE_TABLE));case"base32hex":case"base32-hex":return arr2str(base32(utf8(string),BASE32_HEX_ENCODE_TABLE));case"base64":return arr2str(base64(utf8(string),BASE64_ENCODE_TABLE));case"base64-urlsafe":case"base64urlsafe":case"base64-url":case"base64url":return arr2str(base64(utf8(string),BASE64_URL_ENCODE_TABLE));default:throw new Error("Unknow codec algorithms.")}}function decode(string,codec){switch(codec.toLowerCase()){case"hex":case"base16":return arr2str(deutf8(debase16(string,BASE16_DECODE_TABLE)));case"base32":return arr2str(deutf8(debase32(trimRight(string),BASE32_DECODE_TABLE)));case"base32hex":case"base32-hex":return arr2str(deutf8(debase32(trimRight(string),BASE32_HEX_DECODE_TABLE)));case"base64":return arr2str(deutf8(debase64(trimRight(string),BASE64_DECODE_TABLE)));case"base64-urlsafe":case"base64urlsafe":case"base64-url":case"base64url":return arr2str(deutf8(debase64(trimRight(string),BASE64_URL_DECODE_TABLE)));default:throw new Error("Unknow codec algorithms.")}}function md5(string){var digest=[1732584193,4023233417,2562383102,271733878];var length=[0,0];var bytes=utf8(string);var remain=bytes.length%64;MD5_AC(length,bytes.length);MD5_transfrom(bytes,digest);for(var i=0;i<P.length;++i){P[i]=i<remain?bytes[bytes.length-remain+i]:i==remain?128:0}if(remain<56){P[56]=length[0]&255;P[57]=length[0]>>>8&255;P[58]=length[0]>>>16&255;P[59]=length[0]>>>24&255;P[60]=length[1]&255;P[61]=length[1]>>>8&255;P[62]=length[1]>>>16&255;P[63]=length[1]>>>24&255;MD5_transfrom(P,digest)}else{A[56]=length[0]&255;A[57]=length[0]>>>8&255;A[58]=length[0]>>>16&255;A[59]=length[0]>>>24&255;A[60]=length[1]&255;A[61]=length[1]>>>8&255;A[62]=length[1]>>>16&255;A[63]=length[1]>>>24&255;MD5_transfrom(P,digest);MD5_transfrom(A,digest)}for(var k=0;k<digest.length;++k){digest[k]=(digest[k]<<8|digest[k]>>>24)&16711935|(digest[k]<<24|digest[k]>>>8)&4278255360}for(var k=0,hex="";k<digest.length;++k){hex+=("00000000"+(digest[k]>>>0).toString(16)).slice(-8)}return hex}var W=new Array(80);var P=new Array(64);var A=new Array(64);function MD5_AC(w,s){var t=s<<3>>>0;w[0]+=t;w[1]+=(s>>>29)+(w[0]<t)}function MD5_FF(a,b,c,d,x,s,ac){a+=(b&c|~b&d)+x+ac;a=a<<s|a>>>32-s;return a+b}function MD5_GG(a,b,c,d,x,s,ac){a+=(b&d|c&~d)+x+ac;a=a<<s|a>>>32-s;return a+b}function MD5_HH(a,b,c,d,x,s,ac){a+=(b^c^d)+x+ac;a=a<<s|a>>>32-s;return a+b}function MD5_II(a,b,c,d,x,s,ac){a+=(c^(b|~d))+x+ac;a=a<<s|a>>>32-s;return a+b}function MD5_transfrom(bytes,digest){for(var start=0;start+64<=bytes.length;start+=64){var a=digest[0];var b=digest[1];var c=digest[2];var d=digest[3];for(var t=0,k=start;t<16;++t,k+=4){W[t]=bytes[k]|bytes[k+1]<<8|bytes[k+2]<<16|bytes[k+3]<<24}a=MD5_FF(a,b,c,d,W[0],7,3614090360);d=MD5_FF(d,a,b,c,W[1],12,3905402710);c=MD5_FF(c,d,a,b,W[2],17,606105819);b=MD5_FF(b,c,d,a,W[3],22,3250441966);a=MD5_FF(a,b,c,d,W[4],7,4118548399);d=MD5_FF(d,a,b,c,W[5],12,1200080426);c=MD5_FF(c,d,a,b,W[6],17,2821735955);b=MD5_FF(b,c,d,a,W[7],22,4249261313);a=MD5_FF(a,b,c,d,W[8],7,1770035416);d=MD5_FF(d,a,b,c,W[9],12,2336552879);c=MD5_FF(c,d,a,b,W[10],17,4294925233);b=MD5_FF(b,c,d,a,W[11],22,2304563134);a=MD5_FF(a,b,c,d,W[12],7,1804603682);d=MD5_FF(d,a,b,c,W[13],12,4254626195);c=MD5_FF(c,d,a,b,W[14],17,2792965006);b=MD5_FF(b,c,d,a,W[15],22,1236535329);a=MD5_GG(a,b,c,d,W[1],5,4129170786);d=MD5_GG(d,a,b,c,W[6],9,3225465664);c=MD5_GG(c,d,a,b,W[11],14,643717713);b=MD5_GG(b,c,d,a,W[0],20,3921069994);a=MD5_GG(a,b,c,d,W[5],5,3593408605);d=MD5_GG(d,a,b,c,W[10],9,38016083);c=MD5_GG(c,d,a,b,W[15],14,3634488961);b=MD5_GG(b,c,d,a,W[4],20,3889429448);a=MD5_GG(a,b,c,d,W[9],5,568446438);d=MD5_GG(d,a,b,c,W[14],9,3275163606);c=MD5_GG(c,d,a,b,W[3],14,4107603335);b=MD5_GG(b,c,d,a,W[8],20,1163531501);a=MD5_GG(a,b,c,d,W[13],5,2850285829);d=MD5_GG(d,a,b,c,W[2],9,4243563512);c=MD5_GG(c,d,a,b,W[7],14,1735328473);b=MD5_GG(b,c,d,a,W[12],20,2368359562);a=MD5_HH(a,b,c,d,W[5],4,4294588738);d=MD5_HH(d,a,b,c,W[8],11,2272392833);c=MD5_HH(c,d,a,b,W[11],16,1839030562);b=MD5_HH(b,c,d,a,W[14],23,4259657740);a=MD5_HH(a,b,c,d,W[1],4,2763975236);d=MD5_HH(d,a,b,c,W[4],11,1272893353);c=MD5_HH(c,d,a,b,W[7],16,4139469664);b=MD5_HH(b,c,d,a,W[10],23,3200236656);a=MD5_HH(a,b,c,d,W[13],4,681279174);d=MD5_HH(d,a,b,c,W[0],11,3936430074);c=MD5_HH(c,d,a,b,W[3],16,3572445317);b=MD5_HH(b,c,d,a,W[6],23,76029189);a=MD5_HH(a,b,c,d,W[9],4,3654602809);d=MD5_HH(d,a,b,c,W[12],11,3873151461);c=MD5_HH(c,d,a,b,W[15],16,530742520);b=MD5_HH(b,c,d,a,W[2],23,3299628645);a=MD5_II(a,b,c,d,W[0],6,4096336452);d=MD5_II(d,a,b,c,W[7],10,1126891415);c=MD5_II(c,d,a,b,W[14],15,2878612391);b=MD5_II(b,c,d,a,W[5],21,4237533241);a=MD5_II(a,b,c,d,W[12],6,1700485571);d=MD5_II(d,a,b,c,W[3],10,2399980690);c=MD5_II(c,d,a,b,W[10],15,4293915773);b=MD5_II(b,c,d,a,W[1],21,2240044497);a=MD5_II(a,b,c,d,W[8],6,1873313359);d=MD5_II(d,a,b,c,W[15],10,4264355552);c=MD5_II(c,d,a,b,W[6],15,2734768916);b=MD5_II(b,c,d,a,W[13],21,1309151649);a=MD5_II(a,b,c,d,W[4],6,4149444226);d=MD5_II(d,a,b,c,W[11],10,3174756917);c=MD5_II(c,d,a,b,W[2],15,718787259);b=MD5_II(b,c,d,a,W[9],21,3951481745);digest[0]=digest[0]+a&4294967295;digest[1]=digest[1]+b&4294967295;digest[2]=digest[2]+c&4294967295;digest[3]=digest[3]+d&4294967295}}function sha1(string){var digest=[1732584193,4023233417,2562383102,271733878,3285377520];var length=[0,0];var bytes=utf8(string);var remain=bytes.length%64;SHA1_AC(length,bytes.length);SHA1_transfrom(bytes,digest);for(var i=0;i<P.length;++i){P[i]=i<remain?bytes[bytes.length-remain+i]:i==remain?128:0}if(remain<56){P[56]=length[0]>>>24&255;P[57]=length[0]>>>16&255;P[58]=length[0]>>>8&255;P[59]=length[0]&255;P[60]=length[1]>>>24&255;P[61]=length[1]>>>16&255;P[62]=length[1]>>>8&255;P[63]=length[1]&255;SHA1_transfrom(P,digest)}else{A[56]=length[0]>>>24&255;A[57]=length[0]>>>16&255;A[58]=length[0]>>>8&255;A[59]=length[0]&255;A[60]=length[1]>>>24&255;A[61]=length[1]>>>16&255;A[62]=length[1]>>>8&255;A[63]=length[1]&255;SHA1_transfrom(P,digest);SHA1_transfrom(A,digest)}for(var k=0,hex="";k<digest.length;++k){hex+=("00000000"+(digest[k]>>>0).toString(16)).slice(-8)}return hex}function SHA1_AC(w,s){var t=s<<3>>>0;w[1]+=t;w[0]+=(s>>>29)+(w[1]<t)}function SHA1_transfrom(bytes,digest){for(var start=0;start+64<=bytes.length;start+=64){for(var t=0,k=start;t<16;++t,k+=4){W[t]=bytes[k]<<24|bytes[k+1]<<16|bytes[k+2]<<8|bytes[k+3]}for(var t=16;t<80;++t){W[t]=W[t-3]^W[t-8]^W[t-14]^W[t-16];W[t]=W[t]<<1|W[t]>>>31}var T=0;var A=digest[0];var B=digest[1];var C=digest[2];var D=digest[3];var E=digest[4];for(var t=0;t<20;++t){T=(A<<5|A>>>27)+(B&C|~B&D)+E+W[t]+1518500249;E=D;D=C;C=B<<30|B>>>2;B=A;A=T}for(var t=20;t<40;++t){T=(A<<5|A>>>27)+(B^C^D)+E+W[t]+1859775393;E=D;D=C;C=B<<30|B>>>2;B=A;A=T}for(var t=40;t<60;++t){T=(A<<5|A>>>27)+(B&C|B&D|C&D)+E+W[t]+2400959708;E=D;D=C;C=B<<30|B>>>2;B=A;A=T}for(var t=60;t<80;++t){T=(A<<5|A>>>27)+(B^C^D)+E+W[t]+3395469782;E=D;D=C;C=B<<30|B>>>2;B=A;A=T}digest[0]=digest[0]+A&4294967295;digest[1]=digest[1]+B&4294967295;digest[2]=digest[2]+C&4294967295;digest[3]=digest[3]+D&4294967295;digest[4]=digest[4]+E&4294967295}}if(typeof define=="function"&&define.amd){define(function(){return{encode:encode,decode:decode,md5:md5,sha1:sha1}})}else if(typeof exports!="undefined"){exports.encode=encode;exports.decode=decode;exports.md5=md5;exports.sha1=sha1}else{domain.encode=encode;domain.decode=decode;domain.md5=md5;domain.sha1=sha1}})(typeof window=="undefined"?this:window);